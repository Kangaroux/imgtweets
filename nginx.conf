# Nginx config grabbed from gunicorn docs
# https://docs.gunicorn.org/en/latest/deploy.html

worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    upstream backend {
        server web:8000 fail_timeout=0;
    }

    server {
        # if no Host match, close the connection to prevent host spoofing
        listen 80 default_server;
        return 444;
    }

    server {
        listen 80 deferred;

        # TODO
        # server_name example.com www.example.com;
        server_name localhost 127.0.0.1;

        client_max_body_size 4G;
        keepalive_timeout 5;

        root /app/;

        location / {
            try_files $uri /index.html;
        }

        location /static/ {
            access_log off;
        }

        location ~ /(api|admin)/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;

            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://backend;
        }

        # error_page 500 502 503 504 /500.html;
        # location = /500.html {
        #     root /path/to/app/current/public;
        # }
    }
}
